{"version":3,"sources":["componentes/Ficha.jsx","componentes/Juego.jsx","App.js","index.js"],"names":["Ficha","props","boxSize","imgSize","objectFit","src","estado","ltr","ltr_tr","toLowerCase","toUpperCase","isUppercase","letra","alt","onClick","handleClick","Juego","useState","auxObj","auxIdx","i","juego","length","Math","floor","random","id","setJuego","tiempo","setTiempo","id1","letra1","id2","letra2","nFichasCompletadas","nFichasTotal","finalizado","fichasJugadas","setFichasJugadas","useEffect","setTimeout","direction","justify","p","pl","colorScheme","round","spacing","map","juego_tr","JSON","parse","stringify","fichasJugadas_tr","manejarClick","placement","isOpen","align","leftIcon","Repeat","variant","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.137a1c05.chunk.js","sourcesContent":["import React from 'react';\nimport { Image } from '@chakra-ui/react';\n\nconst Ficha = (props) => {\n    // Funciones útiles\n    const isUppercase = (ltr) => {\n        let ltr_tr = '';\n        if(ltr.toLowerCase() === 'ñ'){\n            ltr_tr = 'nh';\n        }\n        else{\n            ltr_tr = ltr.toLowerCase();\n        }\n\n        return ltr === ltr.toUpperCase() ? ltr_tr+'_upper.png' : ltr_tr+'_lower.png';\n    }\n\n    // Retorno\n    return (\n            <Image\n            boxSize={props.imgSize}\n            objectFit=\"cover\"\n            src={props.estado ? \"./letras/\"+isUppercase(props.letra): './letras/back.png'}\n            alt={props.letra}\n            onClick={props.handleClick}\n            />\n    )\n}\n\nexport default Ficha","import { RepeatIcon } from '@chakra-ui/icons';\nimport { Flex, Heading, Box, Text } from '@chakra-ui/layout';\nimport { WrapItem, Wrap } from '@chakra-ui/layout';\nimport { Drawer, DrawerContent, DrawerHeader, DrawerFooter, DrawerBody } from '@chakra-ui/modal';\nimport { Divider, Stat, StatLabel, StatNumber, Button, VStack } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react';\nimport Ficha from './Ficha';\n\nconst Juego = (props) => {\n    // Hooks\n    const [juego, setJuego] = useState(\n        () => {\n            let auxObj;\n            let auxIdx;\n            for (let i = 0; i < props.juego.length; i++) {\n                auxIdx = Math.floor(Math.random() * (props.juego.length))\n                auxObj = props.juego[auxIdx];\n                props.juego[auxIdx] = props.juego[i];\n                props.juego[auxIdx].id = auxIdx;\n                props.juego[i] = auxObj;\n                props.juego[i].id = i;\n            }\n            return (props.juego);\n        }\n    );\n    const [tiempo, setTiempo] = useState(0);\n    const [fichasJugadas, setFichasJugadas] = useState(\n        {\n            id1: null, letra1: null,\n            id2: null, letra2: null,\n            nFichasCompletadas: 0,\n            nFichasTotal: juego.length,\n            finalizado: false,\n        }\n    );\n\n    useEffect(\n        () => setTimeout(\n            () => {\n                if (!fichasJugadas.finalizado) { setTiempo(tiempo + 1000) }\n            },\n            1000\n        )\n    );\n\n    // Funciones útiles\n    const manejarClick = (id) => {\n        const juego_tr = JSON.parse(JSON.stringify(juego));\n        const fichasJugadas_tr = JSON.parse(JSON.stringify(fichasJugadas));\n\n        // Primero, se debe ver si la ficha no está ya girada\n        if (!juego_tr[id].estado) {\n            // Segundo, ver si están las dos fichas jugadas. Solo ahi devuelven las fichas giradas\n            if (fichasJugadas_tr.id1 != null && fichasJugadas_tr.id2 != null) {\n                // Tercero, ver si corresponde a un MATCH o no\n                if (fichasJugadas_tr.letra1.toLowerCase() !== fichasJugadas_tr.letra2.toLowerCase()) {\n                    // no hay match\n                    juego_tr[fichasJugadas_tr.id1].estado = false;\n                    juego_tr[fichasJugadas_tr.id2].estado = false;\n                    fichasJugadas_tr.nFichasCompletadas--;\n                    fichasJugadas_tr.nFichasCompletadas--;\n                }\n                fichasJugadas_tr.id1 = null;\n                fichasJugadas_tr.letra1 = null;\n                fichasJugadas_tr.id2 = null;\n                fichasJugadas_tr.letra2 = null;\n            }\n\n            // Cuarto, manejar el click\n            juego_tr[id].estado = true;\n            fichasJugadas_tr.nFichasCompletadas++;\n            if (fichasJugadas_tr.id1 === null) {\n                // Se va a dar vuelta la primera ficha\n                fichasJugadas_tr.id1 = id;\n                fichasJugadas_tr.letra1 = juego_tr[id].letra;\n            }\n            else {\n                // Se va a dar vuelta la segunda ficha\n                fichasJugadas_tr.id2 = id;\n                fichasJugadas_tr.letra2 = juego_tr[id].letra;\n            }\n\n            // Quinto, ver si ganó\n            if (fichasJugadas_tr.nFichasTotal === fichasJugadas_tr.nFichasCompletadas) {\n                // Como es la unica posibilidad, es obvio que ganó, no es necesario revisar la letra\n                fichasJugadas_tr.finalizado = true;\n            }\n\n            setFichasJugadas(fichasJugadas_tr);\n            setJuego(juego_tr);\n\n        }\n    }\n\n    const manejarReinicio = () => {\n        setJuego(() => {\n            let auxObj;\n            let auxIdx;\n            for (let i = 0; i < props.juego.length; i++) {\n                auxIdx = Math.floor(Math.random() * (props.juego.length))\n                auxObj = props.juego[auxIdx];\n                props.juego[auxIdx] = props.juego[i];\n                props.juego[auxIdx].id = auxIdx;\n                props.juego[i] = auxObj;\n                props.juego[i].id = i;\n            }\n            return (props.juego);\n        }\n        );\n        setTiempo(0);\n        setFichasJugadas(\n            {\n                id1: null, letra1: null,\n                id2: null, letra2: null,\n                nFichasCompletadas: 0,\n                nFichasTotal: juego.length,\n                finalizado: false,\n            }\n        );\n    }\n\n    return (\n        <Box>\n            <Flex direction=\"column\">\n                <Flex direction=\"row\" justify=\"center\">\n                    <Heading p=\"2\" pl=\"150px\" colorScheme=\"green\" >\n                        LUDIMEMORIA &#9200; {Math.round(tiempo / 1000)}\n                    </Heading>\n                </Flex>\n                <Wrap p=\"1\" spacing=\"3px\">\n                    {\n                        juego.map(\n                            (ltr) => (\n                                <WrapItem key={ltr.id} >\n                                    <Ficha\n                                        letra={ltr.letra}\n                                        key={ltr.id}\n                                        estado={ltr.estado}\n                                        handleClick={() => manejarClick(ltr.id)}\n                                        imgSize={124}\n                                    />\n                                </WrapItem>)\n                            // En paréntesis redondo en el arrow func. Permite evitar hacer el return\n                        )\n                    }\n                </Wrap>\n            </Flex>\n            <Drawer placement=\"right\" isOpen={fichasJugadas.finalizado}>\n                <DrawerContent>\n                    <DrawerHeader>\n                        <Heading>\n                            &#128512;GANASTE\n                        </Heading>\n                    </DrawerHeader>\n                    <Divider />\n                    <DrawerBody>\n                        <Stat>\n                            <StatLabel>Felicitaciones, completaste el desafío en </StatLabel>\n                            <StatNumber>{Math.round(tiempo / 1000)} segundos.</StatNumber>\n                        </Stat>\n                    </DrawerBody>\n                    <DrawerFooter>\n\n                        <VStack spacing={4} align=\"stretch\" >\n                            <Button leftIcon={<RepeatIcon />} colorScheme=\"teal\" variant=\"solid\" onClick={manejarReinicio} >\n                                Jugar nuevamente\n                            </Button>\n                            <Text>@mamatias</Text>\n                        </VStack>\n                    </DrawerFooter>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    )\n}\n\nexport default Juego;","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport './componentes/Juego';\nimport Juego from './componentes/Juego';\n\nconst App = () => {\n  // Esquema del juego\n  const esqJuego = [\n    { id: 0, letra: 'a', estado: false },\n    { id: 1, letra: 'A', estado: false },\n    { id: 2, letra: 'e', estado: false },\n    { id: 3, letra: 'E', estado: false },\n    { id: 4, letra: 'i', estado: false },\n    { id: 5, letra: 'I', estado: false },\n    { id: 6, letra: 'o', estado: false },\n    { id: 7, letra: 'O', estado: false },\n    { id: 8, letra: 'u', estado: false },\n    { id: 9, letra: 'U', estado: false },\n    { id: 10, letra: 'l', estado: false },\n    { id: 11, letra: 'L', estado: false },\n    { id: 12, letra: 'p', estado: false },\n    { id: 13, letra: 'P', estado: false },\n    { id: 14, letra: 'm', estado: false },\n    { id: 15, letra: 'M', estado: false },\n    { id: 16, letra: 'n', estado: false },\n    { id: 17, letra: 'N', estado: false },\n    { id: 18, letra: 's', estado: false },\n    { id: 19, letra: 'S', estado: false },\n  ];\n\n  return (\n    <ChakraProvider>\n      <Juego juego={esqJuego} />\n    </ChakraProvider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}