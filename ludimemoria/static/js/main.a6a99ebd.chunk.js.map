{"version":3,"sources":["componentes/Ficha.jsx","componentes/Juego.jsx","App.js","index.js"],"names":["Ficha","props","w","imgSize","h","bg","borderRadius","boxSize","limpia","objectFit","src","estado","ltr","ltr_tr","toLowerCase","toUpperCase","isUppercase","letra","alt","onClick","handleClick","Juego","useState","auxObj","auxIdx","i","juego","length","Math","floor","random","id","setJuego","tiempo","setTiempo","isContando","setContando","tamFicha_tr","localStorage","getItem","setItem","tamFicha","setTamFicha","id1","letra1","id2","letra2","nFichasCompletadas","nFichasTotal","finalizado","nClicks","fichasJugadas","setFichasJugadas","useEffect","intervalo","setInterval","clearInterval","useDisclosure","isOpen","onOpen","onClose","manejarReinicio","direction","align","mt","p","size","pl","round","mr","colorScheme","variant","Repeat","Hamburger","spacing","map","juego_tr","JSON","parse","stringify","fichasJugadas_tr","manejarClick","placement","color","alignItems","leftIcon","defaultValue","min","max","step","onChange","val","onChangeEnd","position","right","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6a99ebd.chunk.js","sourcesContent":["import React from 'react';\nimport { Center, Image } from '@chakra-ui/react';\n\nconst Ficha = (props) => {\n    // Funciones útiles\n    const isUppercase = (ltr) => {\n        let ltr_tr = '';\n        if (ltr.toLowerCase() === 'ñ') {\n            ltr_tr = 'nh';\n        }\n        else {\n            ltr_tr = ltr.toLowerCase();\n        }\n\n        return ltr === ltr.toUpperCase() ? ltr_tr + '_upper.png' : ltr_tr + '_lower.png';\n    }\n\n    // Retorno\n    return (\n        <Center\n            w={props.imgSize + \"px\"}\n            h={props.imgSize + \"px\"}\n            bg=\"green.200\"\n            borderRadius=\"md\"\n            >\n            <Image\n                boxSize={props.limpia ? (props.imgSize - 10) + \"px\" : props.imgSize + \"px\"}\n                objectFit=\"cover\"\n                src={props.estado ? \"./letras/\" + isUppercase(props.letra) : './letras/back.png'}\n                alt={props.letra}\n                onClick={props.handleClick}\n                borderRadius=\"md\"\n            />\n        </Center>\n\n    )\n}\n\nexport default Ficha","import { RepeatIcon } from '@chakra-ui/icons';\nimport { Flex, Heading, Box, Text, Spacer } from '@chakra-ui/layout';\nimport { WrapItem, Wrap } from '@chakra-ui/layout';\nimport { Drawer, DrawerContent, DrawerHeader, DrawerFooter, DrawerBody, DrawerOverlay, DrawerCloseButton } from '@chakra-ui/modal';\nimport { Divider, Stat, StatLabel, StatNumber, Button, VStack, useDisclosure } from '@chakra-ui/react';\nimport { Slider, SliderTrack, SliderFilledTrack, SliderThumb, Center, IconButton } from '@chakra-ui/react';\nimport { HamburgerIcon } from '@chakra-ui/icons';\n\nimport React, { useEffect, useState } from 'react';\nimport Ficha from './Ficha';\n\nconst Juego = (props) => {\n    // Hooks\n    const [juego, setJuego] = useState(\n        () => {\n            let auxObj;\n            let auxIdx;\n            for (let i = 0; i < props.juego.length; i++) {\n                auxIdx = Math.floor(Math.random() * (props.juego.length))\n                auxObj = props.juego[auxIdx];\n                props.juego[auxIdx] = props.juego[i];\n                props.juego[auxIdx].id = auxIdx;\n                props.juego[i] = auxObj;\n                props.juego[i].id = i;\n            }\n            return (props.juego);\n        }\n    );\n    const [tiempo, setTiempo] = useState(0);\n    const [isContando, setContando] = useState(false);\n    const [tamFicha, setTamFicha] = useState(\n        () => {\n            let tamFicha_tr = localStorage.getItem('ludiMem_tamFicha');\n            if (tamFicha_tr === null) {\n                localStorage.setItem('ludiMem_tamFicha', 100);\n                tamFicha_tr = 100;\n            }\n            return (tamFicha_tr);\n        }\n    );\n    const [fichasJugadas, setFichasJugadas] = useState(\n        {\n            id1: null, letra1: null,\n            id2: null, letra2: null,\n            nFichasCompletadas: 0,\n            nFichasTotal: juego.length,\n            finalizado: false,\n            nClicks: 0,\n        }\n    );\n\n    useEffect(\n        () => {\n            let intervalo = null;\n            if (isContando) {\n                intervalo = setInterval(\n                    () => {\n                        setTiempo(tiempo + 200)\n                    },\n                    200)\n            }\n            return () => clearInterval(intervalo);\n        }\n    );\n\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    // Funciones útiles\n    const manejarClick = (id) => {\n        const juego_tr = JSON.parse(JSON.stringify(juego));\n        const fichasJugadas_tr = JSON.parse(JSON.stringify(fichasJugadas));\n\n        // PROGRAMAR NUEVA LÓGICA MÁS DIRECTA PERO CON MÁS IFS\n\n        // A. ver si la ficha no está girada. y sumador de click\n        if (!juego_tr[id].estado) {\n            juego_tr[id].estado = true;\n\n            // A.1. ver si es el primer click. inicia timer.\n            if (fichasJugadas_tr.nClicks === 0) {\n                setContando(true)\n            }\n            fichasJugadas_tr.nClicks++;\n\n            // A.2. ver si están giradas las dos fichas (unmatch)\n            if (fichasJugadas_tr.id1 !== null && fichasJugadas_tr.id2 !== null) {\n                if (!juego_tr[fichasJugadas_tr.id1].limpia) {\n                    // devolverlas\n                    juego_tr[fichasJugadas_tr.id1].estado = false;\n                    juego_tr[fichasJugadas_tr.id2].estado = false;\n                    fichasJugadas_tr.id1 = null;\n                    fichasJugadas_tr.letra1 = null;\n                    fichasJugadas_tr.id2 = null;\n                    fichasJugadas_tr.letra2 = null;\n                }\n            }\n\n            // A.3. ver si es la primera ficha\n            if (fichasJugadas_tr.id1 === null || (fichasJugadas_tr.id1 !== null && fichasJugadas_tr.id2 !== null)) {\n                fichasJugadas_tr.id2 = null;\n                fichasJugadas_tr.letra2 = null;\n                fichasJugadas_tr.id1 = id;\n                fichasJugadas_tr.letra1 = juego_tr[id].letra;\n            }\n\n            // A.4. Es la segunda ficha\n            else {\n                fichasJugadas_tr.id2 = id;\n                fichasJugadas_tr.letra2 = juego_tr[id].letra;\n\n                // A.4.1. Chequear si es match\n                if (fichasJugadas_tr.letra1.toLowerCase() === fichasJugadas_tr.letra2.toLowerCase()) {\n                    fichasJugadas_tr.nFichasCompletadas++;\n                    fichasJugadas_tr.nFichasCompletadas++;\n                    juego_tr[fichasJugadas_tr.id1].limpia = true;\n                    juego_tr[fichasJugadas_tr.id2].limpia = true;\n                }\n\n                // A.4.2. Chequear si ganó\n                if (fichasJugadas_tr.nFichasCompletadas === fichasJugadas_tr.nFichasTotal) {\n                    fichasJugadas_tr.finalizado = true;\n                    setContando(false);\n                }\n            }\n\n        } else {\n            // ya está girada, caso super raros y por ahora no se permite girar\n        }\n\n        setFichasJugadas(fichasJugadas_tr);\n        setJuego(juego_tr);\n    }\n\n    const manejarReinicio = () => {\n        setJuego(() => {\n            let auxObj;\n            let auxIdx;\n            for (let i = 0; i < props.juego.length; i++) {\n                auxIdx = Math.floor(Math.random() * (props.juego.length))\n                auxObj = props.juego[auxIdx];\n                props.juego[auxIdx] = props.juego[i];\n                props.juego[auxIdx].id = auxIdx;\n                props.juego[i] = auxObj;\n                props.juego[i].id = i;\n            }\n            return (props.juego);\n        }\n        );\n        setTiempo(0);\n        setContando(false);\n        setFichasJugadas(\n            {\n                id1: null, letra1: null,\n                id2: null, letra2: null,\n                nFichasCompletadas: 0,\n                nFichasTotal: juego.length,\n                finalizado: false,\n                nClicks: 0,\n            }\n        );\n    }\n\n    return (\n        <Box>\n            <Flex direction=\"column\">\n                <Flex direction=\"row\" align=\"center\" mt=\"2px\">\n                    <Heading p=\"2\" size=\"sm\">\n                        LUDIMEMORIA\n                    </Heading>\n                    <Heading p=\"2\" pl=\"10px\" size=\"sm\">\n                        &#9200; {Math.round(tiempo / 1000)}\n                    </Heading>\n                    <Heading p=\"2\" pl=\"30px\" size=\"sm\">\n                        &#x1F446; {fichasJugadas.nClicks}\n                    </Heading>\n                    <Spacer />\n                    <IconButton mr=\"10px\" colorScheme=\"yellow\" variant=\"solid\" onClick={manejarReinicio} >\n                        <RepeatIcon />\n                    </IconButton>\n                    <IconButton mr=\"10px\" colorScheme=\"gray\" variant=\"solid\" onClick={onOpen} >\n                        <HamburgerIcon />\n                    </IconButton>\n                </Flex>\n                <Wrap p=\"1\" spacing=\"3px\">\n                    {\n                        juego.map(\n                            (ltr) => (\n                                <WrapItem key={ltr.id} >\n                                    <Ficha\n                                        letra={ltr.letra}\n                                        key={ltr.id}\n                                        estado={ltr.estado}\n                                        handleClick={() => manejarClick(ltr.id)}\n                                        imgSize={tamFicha}\n                                        limpia={ltr.limpia}\n                                    />\n                                </WrapItem>)\n                            // En paréntesis redondo en el arrow func. Permite evitar hacer el return\n                        )\n                    }\n                </Wrap>\n            </Flex>\n\n            <Drawer placement=\"right\" isOpen={fichasJugadas.finalizado}>\n                <DrawerOverlay>\n                    <DrawerContent>\n                        <DrawerHeader>\n                            <Heading>\n                                &#128512;GANASTE\n                        </Heading>\n                        </DrawerHeader>\n                        <Divider />\n                        <DrawerBody>\n                            <Stat>\n                                <StatLabel>Felicitaciones, completaste el desafío en </StatLabel>\n                                <StatNumber>{Math.round(tiempo / 100) / 10} segundos.</StatNumber>\n                                <StatNumber color=\"gray.700\">{fichasJugadas.nClicks} clicks.</StatNumber>\n                            </Stat>\n                        </DrawerBody>\n                        <DrawerFooter >\n\n                            <VStack spacing={4} alignItems=\"flex-end\" >\n                                <Button leftIcon={<RepeatIcon />} colorScheme=\"teal\" variant=\"solid\" onClick={manejarReinicio} >\n                                    Jugar nuevamente\n                                </Button>\n                                <Text color=\"teal\">@mamatias</Text>\n                            </VStack>\n                        </DrawerFooter>\n                    </DrawerContent>\n                </DrawerOverlay>\n            </Drawer>\n\n            <Drawer placement=\"right\" isOpen={isOpen} onClose={onClose}>\n                <DrawerOverlay>\n                    <DrawerContent>\n                        <DrawerHeader>\n                            <Heading>Configuración</Heading>\n                        </DrawerHeader>\n                        <DrawerCloseButton />\n                        <Divider />\n                        <DrawerBody>\n                            <Text>Tamaño de ficha:</Text>\n                            <Center p={3} h=\"auto\" w=\"auto\" >\n                                <Slider\n                                    defaultValue={tamFicha}\n                                    min={80}\n                                    max={220}\n                                    step={10}\n                                    onChange={\n                                        (val) => setTamFicha(val)\n                                    }\n                                    onChangeEnd={\n                                        (val) => localStorage.setItem('ludiMem_tamFicha', val)\n                                    }\n                                >\n                                    <SliderTrack bg=\"red.100\">\n                                        <Box position=\"relative\" right={10} />\n                                        <SliderFilledTrack bg=\"tomato\" />\n                                    </SliderTrack>\n                                    <SliderThumb boxSize={3} />\n                                </Slider>\n                            </Center>\n                        </DrawerBody>\n                        <DrawerFooter></DrawerFooter>\n                    </DrawerContent>\n                </DrawerOverlay>\n            </Drawer>\n\n        </Box>\n    )\n}\n\nexport default Juego;","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport './componentes/Juego';\nimport Juego from './componentes/Juego';\n\nconst App = () => {\n  // Esquema del juego\n  const esqJuego = [\n    { id: 0, letra: 'a',  estado: false , limpia: false},\n    { id: 1, letra: 'A',  estado: false , limpia: false},\n    { id: 2, letra: 'e',  estado: false , limpia: false},\n    { id: 3, letra: 'E',  estado: false , limpia: false},\n    { id: 4, letra: 'i',  estado: false , limpia: false},\n    { id: 5, letra: 'I',  estado: false , limpia: false},\n    { id: 6, letra: 'o',  estado: false , limpia: false},\n    { id: 7, letra: 'O',  estado: false , limpia: false},\n    { id: 8, letra: 'u',  estado: false , limpia: false},\n    { id: 9, letra: 'U',  estado: false , limpia: false},\n    { id: 10, letra: 'l', estado: false , limpia: false},\n    { id: 11, letra: 'L', estado: false , limpia: false},\n    { id: 12, letra: 'p', estado: false , limpia: false},\n    { id: 13, letra: 'P', estado: false , limpia: false},\n    { id: 14, letra: 'm', estado: false , limpia: false},\n    { id: 15, letra: 'M', estado: false , limpia: false},\n    { id: 16, letra: 'n', estado: false , limpia: false},\n    { id: 17, letra: 'N', estado: false , limpia: false},\n    { id: 18, letra: 's', estado: false , limpia: false},\n    { id: 19, letra: 'S', estado: false , limpia: false},\n  ];\n\n  return (\n    <ChakraProvider>\n      <Juego juego={esqJuego} />\n    </ChakraProvider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}